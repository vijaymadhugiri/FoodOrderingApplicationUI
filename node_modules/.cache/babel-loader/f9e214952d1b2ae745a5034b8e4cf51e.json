{"ast":null,"code":"import _classCallCheck from \"/Users/pradeeph/Documents/Upgrad_FullStackDevelopment/Upgrad_Capstone_FrontEnd/food-ordering-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pradeeph/Documents/Upgrad_FullStackDevelopment/Upgrad_Capstone_FrontEnd/food-ordering-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/pradeeph/Documents/Upgrad_FullStackDevelopment/Upgrad_Capstone_FrontEnd/food-ordering-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/pradeeph/Documents/Upgrad_FullStackDevelopment/Upgrad_Capstone_FrontEnd/food-ordering-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/pradeeph/Documents/Upgrad_FullStackDevelopment/Upgrad_Capstone_FrontEnd/food-ordering-app/src/common/header/Header.js\";\nimport React, { Component, Fragment } from 'react';\nimport Modal from 'react-modal';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Fastfood from '@material-ui/icons/Fastfood';\nimport Search from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nvar classes = function classes(theme) {\n  return {\n    searchBarInput: {\n      \"&::placeholder\": {\n        textOverflow: \"ellipsis !important\",\n        color: \"white\"\n      },\n      color: \"white\"\n    },\n    searchBarUnderline: {\n      '&:before': {\n        borderBottom: '1px solid black'\n      },\n      '&:after': {\n        borderBottom: '1px solid white'\n      }\n    },\n    profileButton: {\n      color: \"#c2c2c2\",\n      \"text-transform\": \"none\",\n      fontSize: '17px'\n    }\n  };\n};\n\nvar modalStyle = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nvar Header = /*#__PURE__*/function (_Component) {\n  _inherits(Header, _Component);\n\n  var _super = _createSuper(Header);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _super.call(this, props);\n\n    _this.closeModalHandler = function () {\n      _this.setState({\n        isModalOpen: false,\n        tabsValue: 0,\n        loginContactNumber: \"\",\n        loginContactNumberRequiredError: false,\n        loginContactNumberInvalidError: false,\n        loginContactNumberUnregisteredError: false,\n        loginPassword: \"\",\n        loginPasswordRequiredError: false,\n        loginPasswordMismatchError: false,\n        firstName: \"\",\n        firstNameError: false,\n        lastName: \"\",\n        email: \"\",\n        emailRequiredError: false,\n        emailInvalidError: false,\n        signupPassword: \"\",\n        signupPasswordRequiredError: false,\n        signupPasswordValidationError: false,\n        signupContactNumber: \"\",\n        signupContactNumberRequiredError: false,\n        signupContactNumberValidationError: false,\n        signupContactNumberRegisteredError: false\n      });\n    };\n\n    _this.closeProfileMenuHandler = function () {\n      _this.setState({\n        profileMenuAnchorElement: null,\n        isProfileMenuOpen: false\n      });\n    };\n\n    _this.closeSnackbarHandler = function () {\n      _this.setState({\n        isSnackbarVisible: false,\n        snackbarMessage: \"\"\n      });\n    };\n\n    _this.loginButtonClickHandler = function () {\n      _this.setState({\n        isModalOpen: true\n      });\n    };\n\n    _this.profileButtonClickHandler = function (event) {\n      _this.setState({\n        profileMenuAnchorElement: event.currentTarget,\n        isProfileMenuOpen: true\n      });\n    };\n\n    _this.tabsChangeHandler = function (event, value) {\n      _this.setState({\n        tabsValue: value\n      });\n    };\n\n    _this.loginContactNumberInputHandler = function (event) {\n      _this.setState({\n        loginContactNumber: event.target.value\n      });\n    };\n\n    _this.loginPasswordInputHandler = function (event) {\n      _this.setState({\n        loginPassword: event.target.value\n      });\n    };\n\n    _this.firstNameInputHandler = function (event) {\n      _this.setState({\n        firstName: event.target.value\n      });\n    };\n\n    _this.lastNameInputHandler = function (event) {\n      _this.setState({\n        lastName: event.target.value\n      });\n    };\n\n    _this.emailInputHandler = function (event) {\n      _this.setState({\n        email: event.target.value\n      });\n    };\n\n    _this.signupPasswordInputHandler = function (event) {\n      _this.setState({\n        signupPassword: event.target.value\n      });\n    };\n\n    _this.signupContactNumberInputHandler = function (event) {\n      _this.setState({\n        signupContactNumber: event.target.value\n      });\n    };\n\n    _this.isPasswordStrong = function (password) {\n      var NUMBER_REGEX = /(?=.*[0-9]).*/;\n      var LOWERCASE_REGEX = /(?=.*[a-z]).*/;\n      var UPPERCASE_REGEX = /(?=.*[A-Z]).*/;\n      var SPECIAL_CHARACTER_REGEX = /(?=.*[#@$%&*!^]).*/;\n\n      if (password.length < 8) {\n        return false;\n      }\n\n      if (!NUMBER_REGEX.test(password)) {\n        return false;\n      }\n\n      if (!LOWERCASE_REGEX.test(password)) {\n        return false;\n      }\n\n      if (!UPPERCASE_REGEX.test(password)) {\n        return false;\n      }\n\n      if (!SPECIAL_CHARACTER_REGEX.test(password)) {\n        return false;\n      }\n\n      return true;\n    };\n\n    _this.validateSignupForm = function () {\n      var isFirstNameMissing = false;\n      var isEmailMissing = false;\n      var isEmailInvalid = false;\n      var isPasswordMissing = false;\n      var isPasswordWeak = false;\n      var isContactNumberMissing = false;\n      var isContactNumberInvalid = false;\n      var EMAIL_REGEX = /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w+)+$/;\n      var CONTACT_NUMBER_REGEX = /[7-9][0-9]{9}/;\n\n      if (_this.state.firstName === \"\") {\n        isFirstNameMissing = true;\n      }\n\n      if (_this.state.email === \"\") {\n        isEmailMissing = true;\n      } else if (!EMAIL_REGEX.test(_this.state.email)) {\n        isEmailInvalid = true;\n      }\n\n      if (_this.state.signupPassword === \"\") {\n        isPasswordMissing = true;\n      } else if (!_this.isPasswordStrong(_this.state.signupPassword)) {\n        isPasswordWeak = true;\n      }\n\n      if (_this.state.signupContactNumber === \"\") {\n        isContactNumberMissing = true;\n      } else if (!CONTACT_NUMBER_REGEX.test(_this.state.signupContactNumber)) {\n        isContactNumberInvalid = true;\n      }\n\n      _this.setState({\n        firstNameError: isFirstNameMissing,\n        emailRequiredError: isEmailMissing,\n        emailInvalidError: isEmailInvalid,\n        signupPasswordRequiredError: isPasswordMissing,\n        signupPasswordValidationError: isPasswordWeak,\n        signupContactNumberRequiredError: isContactNumberMissing,\n        signupContactNumberValidationError: isContactNumberInvalid,\n        signupContactNumberRegisteredError: false\n      });\n\n      return !isFirstNameMissing && !isEmailMissing && !isEmailInvalid && !isPasswordMissing && !isPasswordWeak && !isContactNumberMissing && !isContactNumberInvalid;\n    };\n\n    _this.signupSubmitClickHandler = function () {\n      if (!_this.validateSignupForm()) return;\n      var url = _this.props.baseUrl + \"customer/signup\";\n      var requestBody = JSON.stringify({\n        \"contact_number\": _this.state.signupContactNumber,\n        \"email_address\": _this.state.email,\n        \"first_name\": _this.state.firstName,\n        \"last_name\": _this.state.lastName,\n        \"password\": _this.state.signupPassword\n      });\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          \"Accept\": \"application/json;charset=UTF-8\"\n        },\n        body: requestBody\n      }).then(function (response) {\n        if (response.status === 201) {\n          _this.setState({\n            tabsValue: 0,\n            snackbarMessage: \"Registered successfully! Please login now!\",\n            isSnackbarVisible: true,\n            firstName: \"\",\n            firstNameError: false,\n            lastName: \"\",\n            email: \"\",\n            emailRequiredError: false,\n            emailInvalidError: false,\n            signupPassword: \"\",\n            signupPasswordRequiredError: false,\n            signupPasswordValidationError: false,\n            signupContactNumber: \"\",\n            signupContactNumberRequiredError: false,\n            signupContactNumberValidationError: false,\n            signupContactNumberRegisteredError: false\n          });\n        } else if (response.status === 400) {\n          var json = JSON.parse(response.body);\n\n          if (json.code === 'SGR-001') {\n            _this.setState({\n              signupContactNumberRegisteredError: true\n            });\n          }\n        }\n      }).catch(function (err) {\n        return console.log({\n          err\n        });\n      });\n    };\n\n    _this.validateLoginForm = function () {\n      var isContactNumberMissing = false;\n      var isContactNumberInvalid = false;\n      var isPasswordMissing = false;\n      var CONTACT_NUMBER_REGEX = /[7-9][0-9]{9}/;\n\n      if (_this.state.loginContactNumber === \"\") {\n        isContactNumberMissing = true;\n      } else if (!CONTACT_NUMBER_REGEX.test(_this.state.loginContactNumber)) {\n        isContactNumberInvalid = true;\n      }\n\n      if (_this.state.loginPassword === \"\") {\n        isPasswordMissing = true;\n      }\n\n      _this.setState({\n        loginContactNumberRequiredError: isContactNumberMissing,\n        loginContactNumberInvalidError: isContactNumberInvalid,\n        loginPasswordRequiredError: isPasswordMissing\n      });\n\n      return !isContactNumberMissing && !isContactNumberInvalid && !isPasswordMissing;\n    };\n\n    _this.loginSubmitClickHandler = function () {\n      if (!_this.validateLoginForm()) return;\n      var url = _this.props.baseUrl + \"customer/login\";\n      var requestBody = JSON.stringify({\n        \"contact_number\": _this.state.loginContactNumber,\n        \"password\": _this.state.loginPassword\n      });\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          \"Accept\": \"application/json;charset=UTF-8\"\n        },\n        body: requestBody\n      }).then(function (response) {\n        if (response.status === 201) {\n          localStorage.setItem(\"access-token\", response.headers.get(\"access-token\"));\n          var responseJSON = JSON.parse(response.body);\n          localStorage.setItem(\"user-uuid\", responseJSON.id);\n          localStorage.setItem(\"user-name\", responseJSON.first_name);\n\n          _this.setState({\n            isUserLoggedIn: true,\n            loggedInUserName: responseJSON.first_name,\n            snackbarMessage: \"Logged in successfully!\",\n            isSnackbarVisible: true\n          });\n\n          _this.closeModalHandler();\n        } else if (response.status === 401) {\n          var isContactNumberUnregistered = false;\n          var isPasswordMismatch = false;\n\n          var _responseJSON = JSON.parse(_this.responseText);\n\n          if (_responseJSON.code === 'ATH-001') {\n            isContactNumberUnregistered = true;\n          } else if (_responseJSON.code === 'ATH-002') {\n            isPasswordMismatch = true;\n          }\n\n          _this.setState({\n            loginContactNumberUnregisteredError: isContactNumberUnregistered,\n            loginPasswordMismatchError: isPasswordMismatch\n          });\n        }\n      }).catch(function (err) {\n        return console.log({\n          err\n        });\n      });\n    };\n\n    _this.logoutMenuItemHandler = function () {\n      localStorage.removeItem(\"access-token\");\n      localStorage.removeItem(\"user-uuid\");\n      localStorage.removeItem(\"user-name\");\n\n      _this.setState({\n        isUserLoggedIn: false,\n        loggedInUserName: null\n      });\n\n      _this.closeProfileMenuHandler();\n    };\n\n    _this.state = {\n      isUserLoggedIn: localStorage.getItem('access-token') !== null,\n      loggedInUserName: localStorage.getItem('user-name'),\n      isProfileMenuOpen: false,\n      profileMenuAnchorElement: null,\n      isModalOpen: false,\n      tabsValue: 0,\n      loginContactNumber: \"\",\n      loginContactNumberRequiredError: false,\n      loginContactNumberInvalidError: false,\n      loginContactNumberUnregisteredError: false,\n      loginPassword: \"\",\n      loginPasswordRequiredError: false,\n      loginPasswordMismatchError: false,\n      firstName: \"\",\n      firstNameError: false,\n      lastName: \"\",\n      email: \"\",\n      emailError: false,\n      signupPassword: \"\",\n      signupPasswordRequiredError: false,\n      signupPasswordValidationError: false,\n      signupContactNumber: \"\",\n      signupContactNumberRequiredError: false,\n      signupContactNumberValidationError: false,\n      signupContactNumberRegisteredError: false,\n      isSnackbarVisible: false,\n      snackbarMessage: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"render\",\n    value: function render() {\n      var menuButton = this.state.isUserLoggedIn ? /*#__PURE__*/React.createElement(Button, {\n        classes: {\n          root: this.props.classes.profileButton\n        },\n        size: \"large\",\n        variant: \"text\",\n        onClick: this.profileButtonClickHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(AccountCircle, {\n        className: \"profile-button-icon\",\n        htmlColor: \"#c2c2c2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 9\n        }\n      }), this.state.loggedInUserName) : /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        onClick: this.loginButtonClickHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(AccountCircle, {\n        className: \"login-button-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 9\n        }\n      }), \"LOGIN\");\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        className: \"app-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Fastfood, {\n        fontSize: \"large\",\n        htmlColor: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        fullWidth: true,\n        classes: {\n          input: this.props.classes.searchBarInput,\n          underline: this.props.classes.searchBarUnderline\n        },\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Search, {\n          htmlColor: \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 19\n          }\n        })),\n        placeholder: \"Search by Restaurant Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }\n      })), menuButton, /*#__PURE__*/React.createElement(Menu, {\n        anchorEl: this.state.profileMenuAnchorElement,\n        getContentAnchorEl: null,\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"center\"\n        },\n        open: this.state.isProfileMenuOpen,\n        onClose: this.closeProfileMenuHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/profile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 15\n        }\n      }, \"My profile\")), /*#__PURE__*/React.createElement(MenuItem, {\n        onClick: this.logoutMenuItemHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }\n      }, \"Logout\"))), /*#__PURE__*/React.createElement(Modal, {\n        ariaHideApp: false,\n        isOpen: this.state.isModalOpen,\n        contentLabel: \"Login\",\n        onRequestClose: this.closeModalHandler,\n        style: modalStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Tabs, {\n        value: this.state.tabsValue,\n        onChange: this.tabsChangeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Tab, {\n        label: \"LOGIN\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Tab, {\n        label: \"SIGNUP\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }\n      })), this.state.tabsValue === 0 && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 17\n        }\n      }, \"Contact No.\"), /*#__PURE__*/React.createElement(Input, {\n        className: \"input-fields\",\n        type: \"tel\",\n        value: this.state.loginContactNumber,\n        onChange: this.loginContactNumberInputHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(FormHelperText, {\n        className: this.state.loginContactNumberRequiredError ? \"dispBlock\" : \"dispNone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 19\n        }\n      }, \"required\")), /*#__PURE__*/React.createElement(FormHelperText, {\n        className: this.state.loginContactNumberInvalidError ? \"dispBlock\" : \"dispNone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 19\n        }\n      }, \"Invalid Contact Number\"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 17\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n        className: \"input-fields\",\n        type: \"password\",\n        value: this.state.loginPassword,\n        onChange: this.loginPasswordInputHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(FormHelperText, {\n        className: this.state.loginPasswordRequiredError ? \"dispBlock\" : \"dispNone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 19\n        }\n      }, \"required\")), /*#__PURE__*/React.createElement(FormHelperText, {\n        className: this.state.loginContactNumberUnregisteredError ? \"dispBlock\" : \"dispNone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 19\n        }\n      }, \"This contact number has not been registered!\")), /*#__PURE__*/React.createElement(FormHelperText, {\n        className: this.state.loginPasswordMismatchError ? \"dispBlock\" : \"dispNone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 19\n        }\n      }, \"Invalid Credentials\"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.loginSubmitClickHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 15\n        }\n      }, \"LOGIN\")), this.state.tabsValue === 1 && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 17\n        }\n      }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n        className: \"input-fields\",\n        type: \"text\",\n        value: this.state.firstName,\n        onChange: this.firstNameInputHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(FormHelperText, {\n        className: this.state.firstNameError ? \"dispBlock\" : \"dispNone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 19\n        }\n      }, \"required\"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 17\n        }\n      }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n        className: \"input-fields\",\n        type: \"text\",\n        value: this.state.lastName,\n        onChange: this.lastNameInputHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 17\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n        className: \"input-fields\",\n        type: \"email\",\n        value: this.state.email,\n        onChange: this.emailInputHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(FormHelperText, {\n        className: this.state.emailRequiredError ? \"dispBlock\" : \"dispNone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 19\n        }\n      }, \"required\")), /*#__PURE__*/React.createElement(FormHelperText, {\n        className: this.state.emailInvalidError ? \"dispBlock\" : \"dispNone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 19\n        }\n      }, \"Invalid Email\"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 17\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n        className: \"input-fields\",\n        type: \"password\",\n        value: this.state.signupPassword,\n        onChange: this.signupPasswordInputHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(FormHelperText, {\n        className: this.state.signupPasswordRequiredError ? \"dispBlock\" : \"dispNone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 21\n        }\n      }, \"required\")), /*#__PURE__*/React.createElement(FormHelperText, {\n        className: this.state.signupPasswordValidationError ? \"dispBlock\" : \"dispNone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 19\n        }\n      }, \"Password must contain at least one capital letter, one small letter, one number, and one special character\"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 17\n        }\n      }, \"Contact No.\"), /*#__PURE__*/React.createElement(Input, {\n        className: \"input-fields\",\n        value: this.state.signupContactNumber,\n        onChange: this.signupContactNumberInputHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(FormHelperText, {\n        className: this.state.signupContactNumberRequiredError ? \"dispBlock\" : \"dispNone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 19\n        }\n      }, \"required\")), /*#__PURE__*/React.createElement(FormHelperText, {\n        className: this.state.signupContactNumberValidationError ? \"dispBlock\" : \"dispNone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 19\n        }\n      }, \"Contact No. must contain only numbers and must be 10 digits long\")), /*#__PURE__*/React.createElement(FormHelperText, {\n        className: this.state.signupContactNumberRegisteredError ? \"dispBlock\" : \"dispNone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 19\n        }\n      }, \"This contact number is already registered! Try other contact number.\"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.signupSubmitClickHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 15\n        }\n      }, \"SIGNUP\"))), /*#__PURE__*/React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        open: this.state.isSnackbarVisible,\n        autoHideDuration: 4000,\n        onClose: this.closeSnackbarHandler,\n        message: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 20\n          }\n        }, this.state.snackbarMessage),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Header;\n}(Component);\n\nexport default withStyles(classes)(Header);","map":{"version":3,"sources":["/Users/pradeeph/Documents/Upgrad_FullStackDevelopment/Upgrad_Capstone_FrontEnd/food-ordering-app/src/common/header/Header.js"],"names":["React","Component","Fragment","Modal","Link","withStyles","Input","InputAdornment","Button","Tabs","Tab","FormControl","InputLabel","FormHelperText","Snackbar","Menu","MenuItem","Fastfood","Search","AccountCircle","classes","theme","searchBarInput","textOverflow","color","searchBarUnderline","borderBottom","profileButton","fontSize","modalStyle","content","top","left","right","bottom","marginRight","transform","Header","props","closeModalHandler","setState","isModalOpen","tabsValue","loginContactNumber","loginContactNumberRequiredError","loginContactNumberInvalidError","loginContactNumberUnregisteredError","loginPassword","loginPasswordRequiredError","loginPasswordMismatchError","firstName","firstNameError","lastName","email","emailRequiredError","emailInvalidError","signupPassword","signupPasswordRequiredError","signupPasswordValidationError","signupContactNumber","signupContactNumberRequiredError","signupContactNumberValidationError","signupContactNumberRegisteredError","closeProfileMenuHandler","profileMenuAnchorElement","isProfileMenuOpen","closeSnackbarHandler","isSnackbarVisible","snackbarMessage","loginButtonClickHandler","profileButtonClickHandler","event","currentTarget","tabsChangeHandler","value","loginContactNumberInputHandler","target","loginPasswordInputHandler","firstNameInputHandler","lastNameInputHandler","emailInputHandler","signupPasswordInputHandler","signupContactNumberInputHandler","isPasswordStrong","password","NUMBER_REGEX","LOWERCASE_REGEX","UPPERCASE_REGEX","SPECIAL_CHARACTER_REGEX","length","test","validateSignupForm","isFirstNameMissing","isEmailMissing","isEmailInvalid","isPasswordMissing","isPasswordWeak","isContactNumberMissing","isContactNumberInvalid","EMAIL_REGEX","CONTACT_NUMBER_REGEX","state","signupSubmitClickHandler","url","baseUrl","requestBody","JSON","stringify","fetch","method","headers","body","then","response","status","json","parse","code","catch","err","console","log","validateLoginForm","loginSubmitClickHandler","localStorage","setItem","get","responseJSON","id","first_name","isUserLoggedIn","loggedInUserName","isContactNumberUnregistered","isPasswordMismatch","responseText","logoutMenuItemHandler","removeItem","getItem","emailError","menuButton","root","input","underline","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fastfood from '@material-ui/icons/Fastfood'\r\nimport Search from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nconst classes = theme => ({\r\n  searchBarInput: {\r\n    \"&::placeholder\": {\r\n      textOverflow: \"ellipsis !important\",\r\n      color: \"white\"\r\n    },\r\n    color: \"white\"\r\n  },\r\n  searchBarUnderline: {\r\n    '&:before': {\r\n      borderBottom: '1px solid black',\r\n    },\r\n    '&:after': {\r\n      borderBottom: '1px solid white',\r\n    }\r\n  },\r\n  profileButton: {\r\n    color:\"#c2c2c2\",\r\n    \"text-transform\":\"none\",\r\n    fontSize: '17px'\r\n  }    \r\n})\r\n\r\nconst modalStyle = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)'\r\n  }\r\n}\r\n\r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isUserLoggedIn: localStorage.getItem('access-token') !== null,\r\n      loggedInUserName: localStorage.getItem('user-name'),\r\n      isProfileMenuOpen: false,\r\n      profileMenuAnchorElement: null,\r\n      isModalOpen: false,\r\n      tabsValue: 0,\r\n      loginContactNumber: \"\",\r\n      loginContactNumberRequiredError: false,\r\n      loginContactNumberInvalidError: false,\r\n      loginContactNumberUnregisteredError: false,\r\n      loginPassword: \"\",\r\n      loginPasswordRequiredError: false,\r\n      loginPasswordMismatchError: false,\r\n      firstName: \"\",\r\n      firstNameError: false,\r\n      lastName: \"\",\r\n      email: \"\",\r\n      emailError: false,\r\n      signupPassword: \"\",\r\n      signupPasswordRequiredError: false,\r\n      signupPasswordValidationError: false,\r\n      signupContactNumber: \"\",\r\n      signupContactNumberRequiredError: false,\r\n      signupContactNumberValidationError: false,\r\n      signupContactNumberRegisteredError: false,\r\n      isSnackbarVisible: false,\r\n      snackbarMessage: \"\"\r\n    }\r\n  }\r\n\r\n  closeModalHandler = () => {\r\n    this.setState({ \r\n      isModalOpen: false,\r\n      tabsValue: 0,\r\n      loginContactNumber: \"\",\r\n      loginContactNumberRequiredError: false,\r\n      loginContactNumberInvalidError: false,\r\n      loginContactNumberUnregisteredError: false,\r\n      loginPassword: \"\",\r\n      loginPasswordRequiredError: false,\r\n      loginPasswordMismatchError: false,\r\n      firstName: \"\",\r\n      firstNameError: false,\r\n      lastName: \"\",\r\n      email: \"\",\r\n      emailRequiredError: false,\r\n      emailInvalidError: false,\r\n      signupPassword: \"\",\r\n      signupPasswordRequiredError: false,\r\n      signupPasswordValidationError: false,\r\n      signupContactNumber: \"\",\r\n      signupContactNumberRequiredError: false,\r\n      signupContactNumberValidationError: false,\r\n      signupContactNumberRegisteredError: false\r\n    });\r\n  }\r\n\r\n  closeProfileMenuHandler = () => {\r\n    this.setState({\r\n      profileMenuAnchorElement: null,\r\n      isProfileMenuOpen: false\r\n    })\r\n  }\r\n\r\n  closeSnackbarHandler = () => {\r\n    this.setState({ \r\n      isSnackbarVisible: false,\r\n      snackbarMessage: \"\"\r\n    })\r\n  }\r\n\r\n  loginButtonClickHandler = () => {\r\n    this.setState({ isModalOpen: true });\r\n  }\r\n\r\n  profileButtonClickHandler = (event) => {\r\n    this.setState({ \r\n      profileMenuAnchorElement: event.currentTarget,\r\n      isProfileMenuOpen: true\r\n    });\r\n  };\r\n\r\n  tabsChangeHandler = (event, value) => {\r\n    this.setState({ tabsValue: value });\r\n  }\r\n\r\n  loginContactNumberInputHandler = (event) => {\r\n    this.setState({ loginContactNumber: event.target.value });\r\n  }\r\n\r\n  loginPasswordInputHandler = (event) => {\r\n    this.setState({ loginPassword: event.target.value });\r\n  }\r\n\r\n  firstNameInputHandler = (event) => {\r\n    this.setState({ firstName: event.target.value });\r\n  }\r\n\r\n  lastNameInputHandler = (event) => {\r\n    this.setState({ lastName: event.target.value });\r\n  }\r\n\r\n  emailInputHandler = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  }\r\n\r\n  signupPasswordInputHandler = (event) => {\r\n    this.setState({ signupPassword: event.target.value });\r\n  }\r\n\r\n  signupContactNumberInputHandler = (event) => {\r\n    this.setState({ signupContactNumber: event.target.value });\r\n  }\r\n\r\n  isPasswordStrong = (password) => {\r\n    const NUMBER_REGEX = /(?=.*[0-9]).*/;\r\n    const LOWERCASE_REGEX = /(?=.*[a-z]).*/;\r\n    const UPPERCASE_REGEX = /(?=.*[A-Z]).*/;\r\n    const SPECIAL_CHARACTER_REGEX = /(?=.*[#@$%&*!^]).*/;\r\n\r\n    if (password.length < 8) {\r\n      return false;\r\n    }\r\n\r\n    if (!(NUMBER_REGEX.test(password))) {\r\n      return false;\r\n    }\r\n\r\n    if (!(LOWERCASE_REGEX.test(password))) {\r\n      return false\r\n    }\r\n\r\n    if (!(UPPERCASE_REGEX.test(password))) {\r\n      return false;\r\n    }\r\n\r\n    if (!(SPECIAL_CHARACTER_REGEX.test(password))) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n  validateSignupForm = () => {\r\n    let isFirstNameMissing = false;\r\n    let isEmailMissing = false;\r\n    let isEmailInvalid = false;\r\n    let isPasswordMissing = false;\r\n    let isPasswordWeak = false;\r\n    let isContactNumberMissing = false;\r\n    let isContactNumberInvalid = false;\r\n\r\n    const EMAIL_REGEX = /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w+)+$/;\r\n    const CONTACT_NUMBER_REGEX = /[7-9][0-9]{9}/;\r\n\r\n    if (this.state.firstName === \"\") {\r\n      isFirstNameMissing = true;\r\n    }\r\n\r\n    if (this.state.email === \"\") {\r\n      isEmailMissing = true;\r\n    } else if (!(EMAIL_REGEX.test(this.state.email))) {\r\n      isEmailInvalid = true;\r\n    }\r\n    \r\n    if (this.state.signupPassword === \"\") {\r\n      isPasswordMissing = true;\r\n    } else if (!(this.isPasswordStrong(this.state.signupPassword))) { \r\n      isPasswordWeak = true;\r\n    }\r\n    \r\n    if (this.state.signupContactNumber === \"\") { \r\n      isContactNumberMissing = true;\r\n    } else if (!(CONTACT_NUMBER_REGEX.test(this.state.signupContactNumber))) {\r\n      isContactNumberInvalid = true;\r\n    }\r\n\r\n    this.setState({\r\n        firstNameError: isFirstNameMissing,\r\n        emailRequiredError: isEmailMissing,\r\n        emailInvalidError: isEmailInvalid,\r\n        signupPasswordRequiredError: isPasswordMissing,\r\n        signupPasswordValidationError: isPasswordWeak,\r\n        signupContactNumberRequiredError: isContactNumberMissing,\r\n        signupContactNumberValidationError: isContactNumberInvalid,\r\n        signupContactNumberRegisteredError: false\r\n    })\r\n\r\n    return (!isFirstNameMissing && !isEmailMissing && !isEmailInvalid && !isPasswordMissing && !isPasswordWeak && !isContactNumberMissing && !isContactNumberInvalid);\r\n  }\r\n\r\n  signupSubmitClickHandler = () => {\r\n    if (!(this.validateSignupForm())) return;\r\n\r\n    const url = this.props.baseUrl + \"customer/signup\";\r\n    const requestBody = JSON.stringify({ \r\n      \"contact_number\": this.state.signupContactNumber,\r\n      \"email_address\": this.state.email,\r\n      \"first_name\": this.state.firstName,\r\n      \"last_name\": this.state.lastName,\r\n      \"password\": this.state.signupPassword\r\n    });\r\n\r\n    fetch(url, { \r\n      method: 'POST',\r\n      headers: {\r\n        \"Accept\": \"application/json;charset=UTF-8\"\r\n      },\r\n      body: requestBody\r\n    })\r\n    .then(response => {\r\n      if (response.status === 201) {\r\n        this.setState({\r\n          tabsValue: 0,\r\n          snackbarMessage: \"Registered successfully! Please login now!\",\r\n          isSnackbarVisible: true,\r\n          firstName: \"\",\r\n          firstNameError: false,\r\n          lastName: \"\",\r\n          email: \"\",\r\n          emailRequiredError: false,\r\n          emailInvalidError: false,\r\n          signupPassword: \"\",\r\n          signupPasswordRequiredError: false,\r\n          signupPasswordValidationError: false,\r\n          signupContactNumber: \"\",\r\n          signupContactNumberRequiredError: false,\r\n          signupContactNumberValidationError: false,\r\n          signupContactNumberRegisteredError: false\r\n        })\r\n      } else if (response.status === 400) {\r\n        const json = JSON.parse(response.body);\r\n        if (json.code === 'SGR-001') {\r\n          this.setState({\r\n            signupContactNumberRegisteredError: true\r\n          })\r\n        }\r\n      }\r\n    })\r\n    .catch(err => console.log({err}));\r\n  }\r\n\r\n  validateLoginForm = () => {\r\n    let isContactNumberMissing = false;\r\n    let isContactNumberInvalid = false;\r\n    let isPasswordMissing = false;\r\n\r\n    const CONTACT_NUMBER_REGEX = /[7-9][0-9]{9}/;\r\n\r\n    if (this.state.loginContactNumber === \"\") {\r\n      isContactNumberMissing = true;\r\n    } else if (!(CONTACT_NUMBER_REGEX.test(this.state.loginContactNumber))) {\r\n      isContactNumberInvalid = true;\r\n    }\r\n\r\n    if (this.state.loginPassword === \"\") {\r\n      isPasswordMissing = true;\r\n    }\r\n\r\n    this.setState({\r\n      loginContactNumberRequiredError: isContactNumberMissing,\r\n      loginContactNumberInvalidError: isContactNumberInvalid,\r\n      loginPasswordRequiredError: isPasswordMissing\r\n    })\r\n\r\n    return (!isContactNumberMissing && !isContactNumberInvalid && !isPasswordMissing);\r\n}\r\n\r\n  loginSubmitClickHandler = () => {\r\n    if (!(this.validateLoginForm())) return;\r\n\r\n    const url = this.props.baseUrl + \"customer/login\";\r\n    const requestBody = JSON.stringify({ \r\n      \"contact_number\": this.state.loginContactNumber,\r\n      \"password\": this.state.loginPassword\r\n    });\r\n\r\n    fetch(url, { \r\n      method: 'POST',\r\n      headers: {\r\n        \"Accept\": \"application/json;charset=UTF-8\"\r\n      },\r\n      body: requestBody\r\n    })\r\n    .then(response => {\r\n      if (response.status === 201) {\r\n        localStorage.setItem(\"access-token\", response.headers.get(\"access-token\"));\r\n        const responseJSON = JSON.parse(response.body);\r\n        localStorage.setItem(\"user-uuid\", responseJSON.id);\r\n        localStorage.setItem(\"user-name\", responseJSON.first_name);\r\n        this.setState({\r\n          isUserLoggedIn: true,\r\n          loggedInUserName: responseJSON.first_name,\r\n          snackbarMessage: \"Logged in successfully!\",\r\n          isSnackbarVisible: true,\r\n        });\r\n        this.closeModalHandler();\r\n      } else if (response.status === 401) {\r\n\r\n        let isContactNumberUnregistered = false;\r\n        let isPasswordMismatch = false;\r\n\r\n        const responseJSON = JSON.parse(this.responseText);\r\n        if (responseJSON.code === 'ATH-001') { \r\n          isContactNumberUnregistered = true;\r\n        } else if (responseJSON.code === 'ATH-002') {\r\n          isPasswordMismatch = true;\r\n        }\r\n\r\n        this.setState({\r\n          loginContactNumberUnregisteredError: isContactNumberUnregistered,\r\n          loginPasswordMismatchError: isPasswordMismatch,\r\n        })\r\n      }\r\n    })\r\n    .catch(err => console.log({err}));\r\n  }\r\n\r\n  logoutMenuItemHandler = () => {\r\n    localStorage.removeItem(\"access-token\");\r\n    localStorage.removeItem(\"user-uuid\");\r\n    localStorage.removeItem(\"user-name\");\r\n    this.setState({\r\n      isUserLoggedIn: false,\r\n      loggedInUserName: null\r\n    });\r\n    this.closeProfileMenuHandler();\r\n  }\r\n\r\n  render() {\r\n    const menuButton = ( this.state.isUserLoggedIn ? \r\n      <Button \r\n        classes={{root: this.props.classes.profileButton }}\r\n        size=\"large\"\r\n        variant=\"text\"\r\n        onClick={this.profileButtonClickHandler} >\r\n        <AccountCircle className=\"profile-button-icon\" htmlColor=\"#c2c2c2\"/>\r\n        {this.state.loggedInUserName}\r\n      </Button> : \r\n      <Button variant=\"contained\" color=\"default\" onClick={this.loginButtonClickHandler}>\r\n        <AccountCircle className=\"login-button-icon\"/>\r\n        LOGIN\r\n      </Button>\r\n    );\r\n    return (\r\n      <Fragment>\r\n        <header className=\"app-header\">\r\n          <Fastfood fontSize=\"large\" htmlColor=\"white\"/>\r\n          <div className=\"search-container\">\r\n            <Input \r\n              fullWidth\r\n              classes={{ \r\n                input: this.props.classes.searchBarInput,\r\n                underline: this.props.classes.searchBarUnderline\r\n              }}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <Search htmlColor=\"white\"/>\r\n                </InputAdornment>\r\n              }\r\n              placeholder=\"Search by Restaurant Name\"\r\n            />\r\n          </div>\r\n          { menuButton }\r\n          <Menu \r\n            anchorEl={this.state.profileMenuAnchorElement}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{ \r\n              vertical: \"bottom\",\r\n              horizontal: \"center\"\r\n            }}\r\n            open={this.state.isProfileMenuOpen}\r\n            onClose={this.closeProfileMenuHandler}>\r\n            <MenuItem>\r\n              <Link to={\"/profile\"}>\r\n                My profile\r\n              </Link>\r\n            </MenuItem>\r\n            <MenuItem onClick={this.logoutMenuItemHandler}>\r\n              Logout\r\n            </MenuItem>\r\n          </Menu>\r\n        </header>\r\n        <Modal\r\n          ariaHideApp={false}\r\n          isOpen={this.state.isModalOpen}\r\n          contentLabel=\"Login\"\r\n          onRequestClose={this.closeModalHandler}\r\n          style={modalStyle}>\r\n          <Tabs\r\n            value={this.state.tabsValue}\r\n            onChange={this.tabsChangeHandler}>\r\n            <Tab label=\"LOGIN\" />\r\n            <Tab label=\"SIGNUP\" />\r\n          </Tabs>\r\n          { this.state.tabsValue === 0 &&\r\n            <div className=\"modal-content\">\r\n              <br />\r\n              <FormControl fullWidth required>\r\n                <InputLabel>Contact No.</InputLabel>\r\n                <Input\r\n                  className=\"input-fields\"\r\n                  type=\"tel\"\r\n                  value={this.state.loginContactNumber}\r\n                  onChange={this.loginContactNumberInputHandler}/>\r\n                <FormHelperText className={this.state.loginContactNumberRequiredError ? \"dispBlock\" : \"dispNone\"}>\r\n                  <span className='red'>required</span>\r\n                </FormHelperText>\r\n                <FormHelperText className={this.state.loginContactNumberInvalidError ? \"dispBlock\" : \"dispNone\"}>\r\n                  <span className='red'>Invalid Contact Number</span>\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <br />\r\n              <br />\r\n              <FormControl fullWidth required>\r\n                <InputLabel>Password</InputLabel>\r\n                <Input\r\n                  className=\"input-fields\"\r\n                  type=\"password\"\r\n                  value={this.state.loginPassword}\r\n                  onChange={this.loginPasswordInputHandler} />\r\n                <FormHelperText className={this.state.loginPasswordRequiredError ? \"dispBlock\" : \"dispNone\"}>\r\n                  <span className='red'>required</span>\r\n                </FormHelperText>\r\n                <FormHelperText className={this.state.loginContactNumberUnregisteredError ? \"dispBlock\" : \"dispNone\"}>\r\n                  <span className='red'>This contact number has not been registered!</span>\r\n                </FormHelperText>\r\n                <FormHelperText className={this.state.loginPasswordMismatchError ? \"dispBlock\" : \"dispNone\"}>\r\n                  <span className='red'>Invalid Credentials</span>\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <br/>\r\n              <br/>\r\n              <br/>\r\n              <Button \r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.loginSubmitClickHandler}>\r\n                LOGIN\r\n              </Button>\r\n            </div>\r\n          }\r\n          { this.state.tabsValue === 1 &&\r\n            <div className=\"modal-content\">\r\n              <br />\r\n              <FormControl fullWidth required>\r\n                <InputLabel>First Name</InputLabel>\r\n                <Input\r\n                  className=\"input-fields\"\r\n                  type=\"text\"\r\n                  value={this.state.firstName}\r\n                  onChange={this.firstNameInputHandler} />\r\n                <FormHelperText className={this.state.firstNameError ? \"dispBlock\" : \"dispNone\"}>\r\n                  <span className=\"red\">required</span>\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <br/>\r\n              <br/>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Last Name</InputLabel>\r\n                <Input \r\n                  className=\"input-fields\"\r\n                  type=\"text\"\r\n                  value={this.state.lastName} \r\n                  onChange={this.lastNameInputHandler} />\r\n              </FormControl>\r\n              <br/>\r\n              <br/>\r\n              <FormControl fullWidth required>\r\n                <InputLabel>Email</InputLabel>\r\n                <Input \r\n                  className=\"input-fields\"\r\n                  type=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.emailInputHandler} />\r\n                <FormHelperText className={this.state.emailRequiredError ? \"dispBlock\" : \"dispNone\"}>\r\n                  <span className=\"red\">required</span>\r\n                </FormHelperText>\r\n                <FormHelperText className={this.state.emailInvalidError ? \"dispBlock\" : \"dispNone\"}>\r\n                  <span className=\"red\">Invalid Email</span>\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <br/>\r\n              <br/>\r\n              <FormControl fullWidth required>\r\n                <InputLabel>Password</InputLabel>\r\n                <Input\r\n                  className=\"input-fields\"\r\n                  type=\"password\"\r\n                  value={this.state.signupPassword}\r\n                  onChange={this.signupPasswordInputHandler} />\r\n                <FormHelperText className={this.state.signupPasswordRequiredError ? \"dispBlock\" : \"dispNone\"}>\r\n                    <span className=\"red\">required</span>\r\n                </FormHelperText>\r\n                <FormHelperText className={this.state.signupPasswordValidationError ? \"dispBlock\" : \"dispNone\"}>\r\n                  <span className=\"red\">Password must contain at least one capital letter, one small letter, one number, and one special character</span>\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <br/>\r\n              <br/>\r\n              <FormControl fullWidth required>\r\n                <InputLabel>Contact No.</InputLabel>\r\n                <Input \r\n                  className=\"input-fields\"\r\n                  value={this.state.signupContactNumber}\r\n                  onChange={this.signupContactNumberInputHandler} />\r\n                <FormHelperText className={this.state.signupContactNumberRequiredError ? \"dispBlock\" : \"dispNone\"}>\r\n                  <span className=\"red\">required</span>\r\n                </FormHelperText>\r\n                <FormHelperText className={this.state.signupContactNumberValidationError ? \"dispBlock\" : \"dispNone\"}>\r\n                  <span className=\"red\">Contact No. must contain only numbers and must be 10 digits long</span>\r\n                </FormHelperText>\r\n                <FormHelperText className={this.state.signupContactNumberRegisteredError ? \"dispBlock\" : \"dispNone\"}>\r\n                  <span className=\"red\">This contact number is already registered! Try other contact number.</span>\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <br/>\r\n              <br/>\r\n              <br/>\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                onClick={this.signupSubmitClickHandler}>\r\n                SIGNUP\r\n              </Button>\r\n            </div>\r\n          }\r\n        </Modal>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={this.state.isSnackbarVisible}\r\n          autoHideDuration={4000}\r\n          onClose={this.closeSnackbarHandler}\r\n          message={<span>{this.state.snackbarMessage}</span>} />\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(classes)(Header)"]},"metadata":{},"sourceType":"module"}