{"ast":null,"code":"import _objectSpread from \"/Users/pradeeph/Documents/Upgrad_FullStackDevelopment/Upgrad_Capstone_FrontEnd/food-ordering-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/pradeeph/Documents/Upgrad_FullStackDevelopment/Upgrad_Capstone_FrontEnd/food-ordering-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pradeeph/Documents/Upgrad_FullStackDevelopment/Upgrad_Capstone_FrontEnd/food-ordering-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/pradeeph/Documents/Upgrad_FullStackDevelopment/Upgrad_Capstone_FrontEnd/food-ordering-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/pradeeph/Documents/Upgrad_FullStackDevelopment/Upgrad_Capstone_FrontEnd/food-ordering-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/pradeeph/Documents/Upgrad_FullStackDevelopment/Upgrad_Capstone_FrontEnd/food-ordering-app/src/screens/details/Details.js\";\nimport React, { Component } from 'react';\nimport Header from '../../common/header/Header';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles, CardContent } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Card from '@material-ui/core/Card';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport Badge from '@material-ui/core/Badge';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Fade from '@material-ui/core/Fade';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport 'font-awesome/css/font-awesome.min.css';\nimport '@fortawesome/fontawesome-free-solid';\nimport '@fortawesome/fontawesome-svg-core';\nimport '@fortawesome/fontawesome-free-regular';\nimport \"./Details.css\"; // Custom Styles to over ride material ui default styles\n\nvar styles = function styles(theme) {\n  return {\n    textRatingCost: {\n      //Style for the Text of the Rating and cost.\n      'text-overflow': 'clip',\n      'width': '145px',\n      'color': 'grey'\n    },\n    restaurantName: {\n      //Style for the Restaurant name.\n      'padding': '8px 0px 8px 0px',\n      'font-size': '30px'\n    },\n    restaurantCategory: {\n      //Style for the Restaurant Category.\n      'padding': '8px 0px 8px 0px'\n    },\n    avgCost: {\n      //Style for the Average cost.\n      'padding-left': '5px'\n    },\n    itemPrice: {\n      //Style for the Item prices.\n      'padding-left': '5px'\n    },\n    addButton: {\n      //Style for the add Button.\n      'margin-left': '25px'\n    },\n    menuItemName: {\n      //Style for the Item menu name.\n      'margin-left': '20px'\n    },\n    shoppingCart: {\n      //Style for the Shopping cart.\n      color: 'black',\n      'background-color': 'white',\n      width: '60px',\n      height: '50px',\n      'margin-left': '-20px'\n    },\n    cartHeader: {\n      //Style for the Cart Header containing the icon and title.\n      'padding-bottom': '0px',\n      'margin-left': '10px',\n      'margin-right': '10px'\n    },\n    cartItemButton: {\n      //Style for the button in the cart.\n      padding: '10px',\n      'border-radius': '0',\n      color: '#fdd835',\n      '&:hover': {\n        'background-color': '#ffee58'\n      }\n    },\n    cardContent: {\n      //Style for the content for card.\n      'padding-top': '0px',\n      'margin-left': '10px',\n      'margin-right': '10px'\n    },\n    totalAmount: {\n      //Style for the the total amount.\n      'font-weight': 'bold'\n    },\n    checkOutButton: {\n      //Style for the Checkout button in the cart card. \n      'font-weight': '400'\n    }\n  };\n}; // Creating Details class component to render the home page as per the design\n\n\nvar Details = /*#__PURE__*/function (_Component) {\n  _inherits(Details, _Component);\n\n  var _super = _createSuper(Details);\n\n  function Details() {\n    var _this;\n\n    _classCallCheck(this, Details);\n\n    _this = _super.call(this);\n\n    _this.itemAddButtonClickHandler = function (item) {\n      var cartItems = _this.state.cartItems;\n      var itemPresentInCart = false;\n      cartItems.forEach(function (cartItem) {\n        //running a loop to find if the item is already present in the cart.\n        if (cartItem.id === item.id) {\n          // Checking if the parameter item.id matches with the item in the cart.\n          itemPresentInCart = true;\n          cartItem.quantity++; //increasing only the quantity\n\n          cartItem.totalAmount = cartItem.price * cartItem.quantity; //Updating the price\n        }\n      });\n\n      if (!itemPresentInCart) {\n        //Checking if the item is present if not then new item is created and pushed to the cart.\n        var cartItem = {\n          id: item.id,\n          name: item.item_name,\n          price: item.price,\n          totalAmount: item.price,\n          quantity: 1,\n          itemType: item.item_type\n        };\n        cartItems.push(cartItem);\n      } //updating the total amount for the cart.\n\n\n      var totalAmount = 0;\n      cartItems.forEach(function (cartItem) {\n        totalAmount = totalAmount + cartItem.totalAmount;\n      }); //Updating the state.\n\n      _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n        cartItems: cartItems,\n        snackBarOpen: true,\n        snackBarMessage: \"Item added to cart!\",\n        totalAmount: totalAmount\n      }));\n    };\n\n    _this.minusButtonClickHandler = function (item) {\n      var cartItems = _this.state.cartItems;\n      var index = cartItems.indexOf(item);\n      var itemRemoved = false;\n      cartItems[index].quantity--; //Reducing the quantity of the item\n\n      if (cartItems[index].quantity === 0) {\n        //Checking if the quantity is zero to remove from the cart\n        cartItems.splice(index, 1);\n        itemRemoved = true;\n      } else {\n        cartItems[index].totalAmount = cartItems[index].price * cartItems[index].quantity; //Updating the Price of the item\n      } // updating the total amount of the cart\n\n\n      var totalAmount = 0;\n      cartItems.forEach(function (cartItem) {\n        totalAmount = totalAmount + cartItem.totalAmount;\n      }); //Updating the state\n\n      _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n        cartItems: cartItems,\n        snackBarOpen: true,\n        snackBarMessage: itemRemoved ? \"Item removed from cart!\" : \"Item quantity decreased by 1!\",\n        totalAmount: totalAmount\n      }));\n    };\n\n    _this.cartAddButtonClickHandler = function (item) {\n      var cartItems = _this.state.cartItems;\n      var index = cartItems.indexOf(item);\n      cartItems[index].quantity++; //Updating the quantity ofthe relevant item in the cart\n\n      cartItems[index].totalAmount = cartItems[index].price * cartItems[index].quantity; //updating the total price of the item\n      //Updating the Total amount ofthe cart \n\n      var totalAmount = 0;\n      cartItems.forEach(function (cartItem) {\n        totalAmount = totalAmount + cartItem.totalAmount;\n      }); //Updating the state\n\n      _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n        cartItems: cartItems,\n        snackBarOpen: true,\n        snackBarMessage: \"Item quantity increased by 1!\",\n        totalAmount: totalAmount\n      }));\n    };\n\n    _this.checkOutButtonClickHandler = function () {\n      var cartItems = _this.state.cartItems;\n      var isLoggedIn = sessionStorage.getItem(\"access-token\") == null ? false : true;\n\n      if (cartItems.length === 0) {\n        //Checking if cart is empty \n        _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n          snackBarOpen: true,\n          snackBarMessage: \"Please add an item to your cart!\"\n        }));\n      } else if (!isLoggedIn) {\n        //Checking if customer is not loggedIn.\n        _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n          snackBarOpen: true,\n          snackBarMessage: \"Please login first!\"\n        }));\n      } else {\n        //If all the condition are satisfied user pushed to the checkout screen\n        _this.props.history.push({\n          pathname: '/checkout',\n          cartItems: _this.state.cartItems,\n          restaurantDetails: _this.state.restaurantDetails\n        });\n      }\n    };\n\n    _this.snackBarClose = function (event, reason) {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n        snackBarMessage: \"\",\n        snackBarOpen: false\n      }));\n    };\n\n    _this.changeBadgeVisibility = function () {\n      _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n        badgeVisible: !_this.state.badgeVisible\n      }));\n    };\n\n    _this.state = {\n      restaurantDetails: [],\n      categories: [],\n      cartItems: [],\n      totalAmount: 0,\n      snackBarOpen: false,\n      snackBarMessage: \"\",\n      transition: Fade,\n      badgeVisible: false\n    };\n    return _this;\n  } //This method is called when the components are mounted.\n  //This method inturn calls the api get restaurant by id endpoints and updates the state with the relevant details.\n  //Then the page is re-rendered with the data received from the api. \n\n\n  _createClass(Details, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var data = null;\n      var that = this;\n      var xhrRestaurantDetails = new XMLHttpRequest();\n      xhrRestaurantDetails.addEventListener(\"readystatechange\", function () {\n        if (xhrRestaurantDetails.readyState === 4 && xhrRestaurantDetails.status === 200) {\n          var response = JSON.parse(xhrRestaurantDetails.responseText);\n          var categoriesName = []; //Creating array of category.\n\n          response.categories.forEach(function (category) {\n            categoriesName.push(category.category_name);\n          }); //Creating Restaurant object containing relevant details.\n\n          var restaurantDetails = {\n            id: response.id,\n            name: response.restaurant_name,\n            photoURL: response.photo_URL,\n            avgCost: response.average_price,\n            rating: response.customer_rating,\n            noOfCustomerRated: response.number_customers_rated,\n            locality: response.address.locality,\n            categoriesName: categoriesName.toString()\n          };\n          var categories = response.categories;\n          that.setState(_objectSpread(_objectSpread({}, that.state), {}, {\n            restaurantDetails: restaurantDetails,\n            categories: categories\n          }));\n        }\n      }); //Calling the api to get details of the restaurant by id.\n\n      xhrRestaurantDetails.open('GET', this.props.baseUrl + 'restaurant/' + this.props.match.params.id);\n      xhrRestaurantDetails.send(data);\n    } //This Method handles the add item button in the menu list.\n    //This method pushes the item to the cart array in the state if it is not present &\n    //if the item is already present then only increases the quantity of the item.\n    //This method takes the item as the parameter.\n    //After each update a relevant snackbar message is shown.\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // Styles are stored in the const classes\n      var classes = this.props.classes;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        baseUrl: this.props.baseUrl,\n        showHeaderSearchBox: false,\n        changeBadgeVisibility: this.changeBadgeVisibility,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"restaurant-details-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: this.state.restaurantDetails.photoURL,\n        alt: \"Restaurant\",\n        height: \"215px\",\n        width: \"275px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"restaurant-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"restaurant-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h5\",\n        component: \"h5\",\n        className: classes.restaurantName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 25\n        }\n      }, this.state.restaurantDetails.name), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"subtitle1\",\n        component: \"p\",\n        className: classes.restaurantLocation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 25\n        }\n      }, this.state.restaurantDetails.locality), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"subtitle1\",\n        component: \"p\",\n        className: classes.restaurantCategory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 25\n        }\n      }, this.state.restaurantDetails.categoriesName)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"restaurant-rating-cost-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"restaurant-rating-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"restaurant-rating\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: \"star\",\n        size: \"sm\",\n        color: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"subtitle1\",\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 33\n        }\n      }, this.state.restaurantDetails.rating)), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"caption\",\n        component: \"p\",\n        className: classes.textRatingCost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 29\n        }\n      }, \"AVERAGE RATING BY \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"restaurant-NoOfCustomerRated\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 129\n        }\n      }, this.state.restaurantDetails.noOfCustomerRated), \" CUSTOMERS\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"restaurant-avg-cost-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"restaurant-avg-cost\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-inr\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"subtitle1\",\n        component: \"p\",\n        className: classes.avgCost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 33\n        }\n      }, this.state.restaurantDetails.avgCost)), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"caption\",\n        component: \"p\",\n        className: classes.textRatingCost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 29\n        }\n      }, \"AVERAGE COST FOR TWO PEOPLE\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"menu-details-cart-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"menu-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 17\n        }\n      }, this.state.categories.map(function (category) {\n        return (\n          /*#__PURE__*/\n          //Iterating for each category in the categories array to display each category\n          React.createElement(\"div\", {\n            key: category.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(Typography, {\n            variant: \"overline\",\n            component: \"p\",\n            className: classes.categoryName,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 29\n            }\n          }, category.category_name), /*#__PURE__*/React.createElement(Divider, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 29\n            }\n          }), category.item_list.map(function (item) {\n            return (\n              /*#__PURE__*/\n              //Iterating over each item to display each items in the category.\n              React.createElement(\"div\", {\n                className: \"menu-item-container\",\n                key: item.id,\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 33\n                }\n              }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n                icon: \"circle\",\n                size: \"sm\",\n                color: item.item_type === \"NON_VEG\" ? \"#BE4A47\" : \"#5A9A5B\",\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 37\n                }\n              }), /*#__PURE__*/React.createElement(Typography, {\n                variant: \"subtitle1\",\n                component: \"p\",\n                className: classes.menuItemName,\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 37\n                }\n              }, item.item_name[0].toUpperCase() + item.item_name.slice(1)), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"item-price\",\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 37\n                }\n              }, /*#__PURE__*/React.createElement(\"i\", {\n                className: \"fa fa-inr\",\n                \"aria-hidden\": \"true\",\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 41\n                }\n              }), /*#__PURE__*/React.createElement(Typography, {\n                variant: \"subtitle1\",\n                component: \"p\",\n                className: classes.itemPrice,\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 41\n                }\n              }, item.price.toFixed(2))), /*#__PURE__*/React.createElement(IconButton, {\n                className: classes.addButton,\n                \"aria-label\": \"add\",\n                onClick: function onClick() {\n                  return _this2.itemAddButtonClickHandler(item);\n                },\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 37\n                }\n              }, /*#__PURE__*/React.createElement(AddIcon, {\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 41\n                }\n              })))\n            );\n          }))\n        );\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"my-cart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: classes.myCart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        avatar: /*#__PURE__*/React.createElement(Avatar, {\n          \"aria-label\": \"shopping-cart\",\n          className: classes.shoppingCart,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Badge, {\n          badgeContent: this.state.cartItems.length,\n          color: \"primary\",\n          showZero: true,\n          invisible: this.state.badgeVisible,\n          className: classes.badge,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(ShoppingCartIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 41\n          }\n        }))),\n        title: \"My Cart\",\n        titleTypographyProps: {\n          variant: 'h6'\n        },\n        className: classes.cartHeader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(CardContent, {\n        className: classes.cardContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 25\n        }\n      }, this.state.cartItems.map(function (cartItem) {\n        return (\n          /*#__PURE__*/\n          //Iterating over each item in cartItem to show in the cart.\n          React.createElement(\"div\", {\n            className: \"cart-menu-item-container\",\n            key: cartItem.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            className: \"fa fa-stop-circle-o\",\n            \"aria-hidden\": \"true\",\n            style: {\n              color: cartItem.itemType === \"NON_VEG\" ? \"#BE4A47\" : \"#5A9A5B\"\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 33\n            }\n          }), /*#__PURE__*/React.createElement(Typography, {\n            variant: \"subtitle1\",\n            component: \"p\",\n            className: classes.menuItemName,\n            id: \"cart-menu-item-name\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 33\n            }\n          }, cartItem.name[0].toUpperCase() + cartItem.name.slice(1)), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"quantity-container\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            className: classes.cartItemButton,\n            id: \"minus-button\",\n            \"aria-label\": \"remove\",\n            onClick: function onClick() {\n              return _this2.minusButtonClickHandler(cartItem);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n            icon: \"minus\",\n            size: \"xs\",\n            color: \"black\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 37\n            }\n          })), /*#__PURE__*/React.createElement(Typography, {\n            variant: \"subtitle1\",\n            component: \"p\",\n            className: classes.itemQuantity,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 33\n            }\n          }, cartItem.quantity), /*#__PURE__*/React.createElement(IconButton, {\n            className: classes.cartItemButton,\n            \"aria-label\": \"add\",\n            onClick: function onClick() {\n              return _this2.cartAddButtonClickHandler(cartItem);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n            icon: \"plus\",\n            size: \"xs\",\n            color: \"black\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 37\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"item-price\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            className: \"fa fa-inr\",\n            \"aria-hidden\": \"true\",\n            style: {\n              color: 'grey'\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 37\n            }\n          }), /*#__PURE__*/React.createElement(Typography, {\n            variant: \"subtitle1\",\n            component: \"p\",\n            className: classes.itemPrice,\n            id: \"cart-item-price\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 37\n            }\n          }, cartItem.totalAmount.toFixed(2))))\n        );\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"total-amount-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"subtitle2\",\n        component: \"p\",\n        className: classes.totalAmount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 33\n        }\n      }, \"TOTAL AMOUNT\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"total-price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-inr\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"subtitle1\",\n        component: \"p\",\n        className: classes.itemPrice,\n        id: \"cart-total-price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 37\n        }\n      }, this.state.totalAmount.toFixed(2)))), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        fullWidth: true,\n        className: classes.checkOutButton,\n        onClick: this.checkOutButtonClickHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 29\n        }\n      }, \"CHECKOUT\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        open: this.state.snackBarOpen,\n        autoHideDuration: 4000,\n        onClose: this.snackBarClose,\n        TransitionComponent: this.state.transition,\n        ContentProps: {\n          'aria-describedby': 'message-id'\n        },\n        message: /*#__PURE__*/React.createElement(\"span\", {\n          id: \"message-id\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 30\n          }\n        }, this.state.snackBarMessage),\n        action: /*#__PURE__*/React.createElement(IconButton, {\n          color: \"inherit\",\n          onClick: this.snackBarClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(CloseIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 29\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 17\n        }\n      })));\n    }\n  }]);\n\n  return Details;\n}(Component);\n\nexport default withStyles(styles)(Details);","map":{"version":3,"sources":["/Users/pradeeph/Documents/Upgrad_FullStackDevelopment/Upgrad_Capstone_FrontEnd/food-ordering-app/src/screens/details/Details.js"],"names":["React","Component","Header","Typography","withStyles","CardContent","Divider","IconButton","AddIcon","CloseIcon","Card","ShoppingCartIcon","CardHeader","Avatar","Badge","Button","Snackbar","Fade","FontAwesomeIcon","styles","theme","textRatingCost","restaurantName","restaurantCategory","avgCost","itemPrice","addButton","menuItemName","shoppingCart","color","width","height","cartHeader","cartItemButton","padding","cardContent","totalAmount","checkOutButton","Details","itemAddButtonClickHandler","item","cartItems","state","itemPresentInCart","forEach","cartItem","id","quantity","price","name","item_name","itemType","item_type","push","setState","snackBarOpen","snackBarMessage","minusButtonClickHandler","index","indexOf","itemRemoved","splice","cartAddButtonClickHandler","checkOutButtonClickHandler","isLoggedIn","sessionStorage","getItem","length","props","history","pathname","restaurantDetails","snackBarClose","event","reason","changeBadgeVisibility","badgeVisible","categories","transition","data","that","xhrRestaurantDetails","XMLHttpRequest","addEventListener","readyState","status","response","JSON","parse","responseText","categoriesName","category","category_name","restaurant_name","photoURL","photo_URL","average_price","rating","customer_rating","noOfCustomerRated","number_customers_rated","locality","address","toString","open","baseUrl","match","params","send","classes","restaurantLocation","map","categoryName","item_list","toUpperCase","slice","toFixed","myCart","badge","variant","itemQuantity","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Header from '../../common/header/Header';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles, CardContent } from '@material-ui/core';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Card from '@material-ui/core/Card';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '@fortawesome/fontawesome-free-solid';\r\nimport '@fortawesome/fontawesome-svg-core';\r\nimport '@fortawesome/fontawesome-free-regular';\r\n\r\n\r\nimport \"./Details.css\"\r\n\r\n// Custom Styles to over ride material ui default styles\r\nconst styles = (theme => ({\r\n\r\n    textRatingCost: { //Style for the Text of the Rating and cost.\r\n        'text-overflow': 'clip',\r\n        'width': '145px',\r\n        'color': 'grey'\r\n    },\r\n    restaurantName: { //Style for the Restaurant name.\r\n        'padding': '8px 0px 8px 0px',\r\n        'font-size': '30px',\r\n    },\r\n    restaurantCategory: { //Style for the Restaurant Category.\r\n        'padding': '8px 0px 8px 0px'\r\n    }, \r\n    avgCost: { //Style for the Average cost.\r\n        'padding-left': '5px'\r\n    },\r\n    itemPrice: { //Style for the Item prices.\r\n        'padding-left': '5px'\r\n    },\r\n    addButton: { //Style for the add Button.\r\n        'margin-left': '25px',\r\n    },\r\n    menuItemName: { //Style for the Item menu name.\r\n        'margin-left': '20px',\r\n    },\r\n\r\n    shoppingCart: { //Style for the Shopping cart.\r\n        color: 'black',\r\n        'background-color': 'white',\r\n        width: '60px',\r\n        height: '50px',\r\n        'margin-left': '-20px',\r\n    },\r\n    cartHeader: { //Style for the Cart Header containing the icon and title.\r\n        'padding-bottom': '0px',\r\n        'margin-left': '10px',\r\n        'margin-right': '10px'\r\n    },\r\n    cartItemButton: { //Style for the button in the cart.\r\n        padding: '10px',\r\n        'border-radius': '0',\r\n        color: '#fdd835',\r\n        '&:hover': {\r\n            'background-color': '#ffee58',\r\n        }\r\n    },\r\n    cardContent: { //Style for the content for card.\r\n        'padding-top': '0px',\r\n        'margin-left': '10px',\r\n        'margin-right': '10px'\r\n    },\r\n    totalAmount: { //Style for the the total amount.\r\n        'font-weight': 'bold'\r\n    },\r\n    checkOutButton: { //Style for the Checkout button in the cart card. \r\n        'font-weight': '400'\r\n    }\r\n\r\n\r\n\r\n\r\n}))\r\n\r\n\r\n\r\n\r\n\r\n// Creating Details class component to render the home page as per the design\r\n\r\nclass Details extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            restaurantDetails: [],\r\n            categories: [],\r\n            cartItems: [],\r\n            totalAmount:0,\r\n            snackBarOpen: false,\r\n            snackBarMessage: \"\",\r\n            transition: Fade,\r\n            badgeVisible:false,\r\n        }\r\n    }\r\n\r\n    //This method is called when the components are mounted.\r\n    //This method inturn calls the api get restaurant by id endpoints and updates the state with the relevant details.\r\n    //Then the page is re-rendered with the data received from the api. \r\n    componentDidMount() {\r\n        let data = null;\r\n        let that = this;\r\n        let xhrRestaurantDetails = new XMLHttpRequest()\r\n\r\n\r\n        xhrRestaurantDetails.addEventListener(\"readystatechange\", function () {\r\n            if (xhrRestaurantDetails.readyState === 4 && xhrRestaurantDetails.status === 200) {\r\n                let response = JSON.parse(xhrRestaurantDetails.responseText);\r\n                let categoriesName = [];\r\n                //Creating array of category.\r\n                response.categories.forEach(category => {\r\n                    categoriesName.push(category.category_name);\r\n                });\r\n                //Creating Restaurant object containing relevant details.\r\n                let restaurantDetails = {\r\n                    id: response.id,\r\n                    name: response.restaurant_name,\r\n                    photoURL: response.photo_URL,\r\n                    avgCost: response.average_price,\r\n                    rating: response.customer_rating,\r\n                    noOfCustomerRated: response.number_customers_rated,\r\n                    locality: response.address.locality,\r\n                    categoriesName: categoriesName.toString(),\r\n                }\r\n                let categories = response.categories;\r\n                that.setState({\r\n                    ...that.state,\r\n                    restaurantDetails: restaurantDetails,\r\n                    categories: categories,\r\n\r\n                })\r\n            }\r\n\r\n        })\r\n\r\n        //Calling the api to get details of the restaurant by id.\r\n        xhrRestaurantDetails.open('GET', this.props.baseUrl + 'restaurant/' + this.props.match.params.id)\r\n        xhrRestaurantDetails.send(data);\r\n\r\n    }\r\n\r\n\r\n    //This Method handles the add item button in the menu list.\r\n    //This method pushes the item to the cart array in the state if it is not present &\r\n    //if the item is already present then only increases the quantity of the item.\r\n    //This method takes the item as the parameter.\r\n    //After each update a relevant snackbar message is shown.\r\n    itemAddButtonClickHandler = (item) => {\r\n        let cartItems = this.state.cartItems;\r\n        let itemPresentInCart = false;\r\n        cartItems.forEach(cartItem => { //running a loop to find if the item is already present in the cart.\r\n            if (cartItem.id === item.id) { // Checking if the parameter item.id matches with the item in the cart.\r\n                itemPresentInCart = true;\r\n                cartItem.quantity++; //increasing only the quantity\r\n                cartItem.totalAmount = cartItem.price * cartItem.quantity;  //Updating the price\r\n            }\r\n        })\r\n        if (!itemPresentInCart) { //Checking if the item is present if not then new item is created and pushed to the cart.\r\n            let cartItem = {\r\n                id:item.id,\r\n                name: item.item_name,\r\n                price: item.price,\r\n                totalAmount:item.price,\r\n                quantity: 1,\r\n                itemType: item.item_type,\r\n            }\r\n            cartItems.push(cartItem);\r\n        }\r\n        //updating the total amount for the cart.\r\n        let totalAmount = 0;\r\n        cartItems.forEach(cartItem =>{\r\n            totalAmount = totalAmount + cartItem.totalAmount; \r\n        })\r\n\r\n        //Updating the state.\r\n        this.setState({\r\n            ...this.state,\r\n            cartItems: cartItems,\r\n            snackBarOpen: true,\r\n            snackBarMessage: \"Item added to cart!\",\r\n            totalAmount:totalAmount,\r\n        \r\n        })\r\n    }\r\n\r\n    //This Method is called when the minus button in the cart is clicked.\r\n    //It take item as the parameter \r\n    //This method updates the quantity of the item and reduces by 1 for each click.\r\n    //If the item is reduced to zero the the item is removed from the cart.\r\n    //After each update a relevant snackbar message is shown.\r\n    minusButtonClickHandler =  (item) => {\r\n        let cartItems = this.state.cartItems;\r\n        let index =  cartItems.indexOf(item);\r\n        let itemRemoved = false;\r\n        cartItems[index].quantity--; //Reducing the quantity of the item\r\n        if(cartItems[index].quantity === 0){ //Checking if the quantity is zero to remove from the cart\r\n            cartItems.splice(index,1);\r\n            itemRemoved = true;\r\n        }else{\r\n            cartItems[index].totalAmount = cartItems[index].price * cartItems[index].quantity; //Updating the Price of the item\r\n        }\r\n\r\n        // updating the total amount of the cart\r\n        let totalAmount = 0;\r\n        cartItems.forEach(cartItem =>{\r\n            totalAmount = totalAmount + cartItem.totalAmount;\r\n        })\r\n\r\n        //Updating the state\r\n        this.setState({\r\n            ...this.state,\r\n            cartItems: cartItems,\r\n            snackBarOpen: true,\r\n            snackBarMessage: itemRemoved ? \"Item removed from cart!\" :\"Item quantity decreased by 1!\",\r\n            totalAmount:totalAmount,\r\n\r\n        })\r\n    }\r\n\r\n    //This method is called when the add button in the cart is clicked.\r\n    //This method takes item as the parameter.\r\n    //This method finds the corresponding item and updates it quantity by 1 for each click.\r\n    //After each update a relevant snackbar message is shown.\r\n    cartAddButtonClickHandler = (item) => {\r\n        let cartItems = this.state.cartItems;\r\n        let index =  cartItems.indexOf(item);\r\n        cartItems[index].quantity++; //Updating the quantity ofthe relevant item in the cart\r\n        cartItems[index].totalAmount = cartItems[index].price * cartItems[index].quantity; //updating the total price of the item\r\n        \r\n        //Updating the Total amount ofthe cart \r\n        let totalAmount = 0;\r\n        cartItems.forEach(cartItem =>{\r\n            totalAmount = totalAmount + cartItem.totalAmount;\r\n        })\r\n\r\n        //Updating the state\r\n        this.setState({\r\n            ...this.state,\r\n            cartItems: cartItems,\r\n            snackBarOpen: true,\r\n            snackBarMessage: \"Item quantity increased by 1!\",\r\n            totalAmount:totalAmount,\r\n\r\n        })\r\n    } \r\n\r\n    //This Method is called when the checkout button in the cart is clicked\r\n    //This method checks for two condition such as if the item is added to the cart & if the user is logged in\r\n    //If both the condition is satisfied then pushes to next checkout screen with the cart & restaurant details.\r\n    //For Both the condition relevant snack bar message is displayed.\r\n    checkOutButtonClickHandler= () => {\r\n        let cartItems =  this.state.cartItems;\r\n        let isLoggedIn = sessionStorage.getItem(\"access-token\") == null ? false : true;\r\n        if(cartItems.length === 0){ //Checking if cart is empty \r\n            this.setState({\r\n            ...this.state,\r\n            snackBarOpen: true,\r\n            snackBarMessage: \"Please add an item to your cart!\",\r\n            })\r\n        }else if(!isLoggedIn){ //Checking if customer is not loggedIn.\r\n            this.setState({\r\n                ...this.state,\r\n                snackBarOpen: true,\r\n                snackBarMessage: \"Please login first!\",\r\n            })\r\n        }else{ //If all the condition are satisfied user pushed to the checkout screen\r\n            this.props.history.push({\r\n                pathname: '/checkout',\r\n                cartItems: this.state.cartItems,\r\n                restaurantDetails: this.state.restaurantDetails,\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    //Handles Close function of the snackBar\r\n    snackBarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            snackBarMessage: \"\",\r\n            snackBarOpen: false,\r\n        })\r\n    }\r\n\r\n    //this method changes the visibility of badge when the modal is open in the details page.\r\n    changeBadgeVisibility = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            badgeVisible:!this.state.badgeVisible,\r\n        })\r\n    }\r\n\r\nrender() {\r\n    // Styles are stored in the const classes\r\n    const { classes } = this.props;\r\n    return (\r\n\r\n        <div>\r\n            {/* Rendering the header and passing the parameter showHeaderSearchBox as false to not render the searchBox \r\n            also changeBadgeVisibility function is passed to change the visibility when the modal is open. */}\r\n            <Header baseUrl={this.props.baseUrl} showHeaderSearchBox={false} changeBadgeVisibility = {this.changeBadgeVisibility}></Header>\r\n            {/* Restaurant Details Container */}\r\n            <div className=\"restaurant-details-container\">\r\n                <div>\r\n                    <img src={this.state.restaurantDetails.photoURL} alt=\"Restaurant\" height=\"215px\" width=\"275px\" />\r\n                </div>\r\n                <div className=\"restaurant-details\">\r\n                    <div className=\"restaurant-name\">\r\n                        <Typography variant=\"h5\" component=\"h5\" className={classes.restaurantName}>{this.state.restaurantDetails.name}</Typography>\r\n                        <Typography variant=\"subtitle1\" component=\"p\" className={classes.restaurantLocation}>{this.state.restaurantDetails.locality}</Typography>\r\n                        <Typography variant=\"subtitle1\" component=\"p\" className={classes.restaurantCategory}>{this.state.restaurantDetails.categoriesName}</Typography>\r\n                    </div>\r\n                    <div className=\"restaurant-rating-cost-container\">\r\n                        <div className=\"restaurant-rating-container\">\r\n                            <div className=\"restaurant-rating\">\r\n                                <FontAwesomeIcon icon=\"star\" size=\"sm\" color=\"black\" />\r\n                                <Typography variant=\"subtitle1\" component=\"p\">{this.state.restaurantDetails.rating}</Typography>\r\n                            </div>\r\n                            <Typography variant=\"caption\" component=\"p\" className={classes.textRatingCost}  >AVERAGE RATING BY {<span className=\"restaurant-NoOfCustomerRated\">{this.state.restaurantDetails.noOfCustomerRated}</span>} CUSTOMERS</Typography>\r\n                        </div>\r\n                        <div className=\"restaurant-avg-cost-container\">\r\n                            <div className=\"restaurant-avg-cost\">\r\n                                <i className=\"fa fa-inr\" aria-hidden=\"true\"></i>\r\n                                <Typography variant=\"subtitle1\" component=\"p\" className={classes.avgCost}>{this.state.restaurantDetails.avgCost}</Typography>\r\n                            </div>\r\n                            <Typography variant=\"caption\" component=\"p\" className={classes.textRatingCost} >AVERAGE COST FOR TWO PEOPLE</Typography>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* Menu and Cart Card Container */}\r\n            <div className=\"menu-details-cart-container\">\r\n\r\n                <div className=\"menu-details\">\r\n                    {this.state.categories.map(category => ( //Iterating for each category in the categories array to display each category\r\n                        <div key={category.id}>\r\n                            <Typography variant=\"overline\" component=\"p\" className={classes.categoryName} >{category.category_name}</Typography>\r\n                            <Divider />\r\n                            {category.item_list.map(item => ( //Iterating over each item to display each items in the category.\r\n                                <div className='menu-item-container' key={item.id}>\r\n                                    <FontAwesomeIcon icon=\"circle\" size=\"sm\" color={item.item_type === \"NON_VEG\" ? \"#BE4A47\" : \"#5A9A5B\"} />\r\n                                    <Typography variant=\"subtitle1\" component=\"p\" className={classes.menuItemName} >{item.item_name[0].toUpperCase() + item.item_name.slice(1)}</Typography>\r\n                                    <div className=\"item-price\">\r\n                                        <i className=\"fa fa-inr\" aria-hidden=\"true\"></i>\r\n                                        <Typography variant=\"subtitle1\" component=\"p\" className={classes.itemPrice} >{item.price.toFixed(2)}</Typography>\r\n                                    </div>\r\n                                    <IconButton className={classes.addButton} aria-label=\"add\" onClick={() => this.itemAddButtonClickHandler(item)}>\r\n                                        <AddIcon />\r\n                                    </IconButton>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                {/* Cart Card */}\r\n                <div className=\"my-cart\">\r\n                    <Card className={classes.myCart}>\r\n                        <CardHeader\r\n                            avatar={\r\n                                <Avatar aria-label=\"shopping-cart\" className={classes.shoppingCart}>\r\n                                    <Badge badgeContent={this.state.cartItems.length} color=\"primary\" showZero = {true} invisible={this.state.badgeVisible} className={classes.badge}>\r\n                                        <ShoppingCartIcon />\r\n                                    </Badge>\r\n                                </Avatar>\r\n                            }\r\n                            title=\"My Cart\"\r\n                            titleTypographyProps={{\r\n                                variant: 'h6'\r\n                            }}\r\n                            className={classes.cartHeader}\r\n                        />\r\n                        <CardContent className={classes.cardContent}>\r\n                            {this.state.cartItems.map(cartItem => ( //Iterating over each item in cartItem to show in the cart.\r\n                            <div className=\"cart-menu-item-container\" key={cartItem.id}>\r\n                                <i className=\"fa fa-stop-circle-o\" aria-hidden=\"true\" style={{color:cartItem.itemType === \"NON_VEG\" ? \"#BE4A47\" : \"#5A9A5B\"}}></i>\r\n                                <Typography variant=\"subtitle1\" component=\"p\" className={classes.menuItemName} id=\"cart-menu-item-name\" >{cartItem.name[0].toUpperCase() + cartItem.name.slice(1)}</Typography>\r\n                                <div className=\"quantity-container\">\r\n                                <IconButton className={classes.cartItemButton} id=\"minus-button\" aria-label=\"remove\" onClick = {() => this.minusButtonClickHandler(cartItem)} >\r\n                                    <FontAwesomeIcon icon=\"minus\" size=\"xs\" color=\"black\" />\r\n                                </IconButton>\r\n                                <Typography variant=\"subtitle1\" component=\"p\" className={classes.itemQuantity}>{cartItem.quantity}</Typography>\r\n                                <IconButton className={classes.cartItemButton} aria-label=\"add\"  onClick = {() => this.cartAddButtonClickHandler(cartItem)}>\r\n                                    <FontAwesomeIcon icon=\"plus\" size=\"xs\" color=\"black\" />\r\n                                </IconButton>\r\n                                </div>\r\n                                <div className=\"item-price\">\r\n                                    <i className=\"fa fa-inr\" aria-hidden=\"true\" style={{ color: 'grey' }}></i>\r\n                                    <Typography variant=\"subtitle1\" component=\"p\" className={classes.itemPrice} id=\"cart-item-price\">{cartItem.totalAmount.toFixed(2)}</Typography>\r\n                                </div>\r\n                            </div>\r\n                            ))}\r\n                            <div className=\"total-amount-container\">\r\n                                <Typography variant=\"subtitle2\" component=\"p\" className={classes.totalAmount}>TOTAL AMOUNT</Typography>\r\n                                <div className=\"total-price\">\r\n                                    <i className=\"fa fa-inr\" aria-hidden=\"true\" ></i>\r\n                                    <Typography variant=\"subtitle1\" component=\"p\" className={classes.itemPrice} id=\"cart-total-price\">{this.state.totalAmount.toFixed(2)}</Typography>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Button variant=\"contained\" color='primary' fullWidth={true} className={classes.checkOutButton} onClick = {this.checkOutButtonClickHandler}>CHECKOUT</Button>\r\n\r\n                        </CardContent>\r\n\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={this.state.snackBarOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={this.snackBarClose}\r\n                    TransitionComponent={this.state.transition}\r\n                    ContentProps={{\r\n                        'aria-describedby': 'message-id',\r\n                    }}\r\n                    message={<span id=\"message-id\">{this.state.snackBarMessage}</span>}\r\n                    action={\r\n                        <IconButton color='inherit' onClick={this.snackBarClose}>\r\n                            <CloseIcon/>\r\n                        </IconButton>\r\n                    }\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default withStyles(styles)(Details);"]},"metadata":{},"sourceType":"module"}