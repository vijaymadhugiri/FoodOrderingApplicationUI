{"ast":null,"code":"import _objectSpread from \"/Users/pradeeph/Documents/Upgrad_FullStackDevelopment/Upgrad_Capstone_FrontEnd/food-ordering-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/pradeeph/Documents/Upgrad_FullStackDevelopment/Upgrad_Capstone_FrontEnd/food-ordering-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pradeeph/Documents/Upgrad_FullStackDevelopment/Upgrad_Capstone_FrontEnd/food-ordering-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/pradeeph/Documents/Upgrad_FullStackDevelopment/Upgrad_Capstone_FrontEnd/food-ordering-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/pradeeph/Documents/Upgrad_FullStackDevelopment/Upgrad_Capstone_FrontEnd/food-ordering-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/pradeeph/Documents/Upgrad_FullStackDevelopment/Upgrad_Capstone_FrontEnd/food-ordering-app/src/screens/home/Home.js\";\nimport React, { Component } from 'react';\nimport Header from '../../common/header/Header';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport 'font-awesome/css/font-awesome.min.css';\nimport '@fortawesome/fontawesome-free-solid';\nimport '@fortawesome/fontawesome-svg-core';\nimport './Home.css'; // Custom Styles to over ride material ui default styles\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.paper\n    },\n    grid: {\n      //style for the grid component\n      \"padding\": \"20px\",\n      \"margin-left\": \"0.5%\",\n      \"margin-right\": \"0.5%\",\n      transform: 'translateZ(0)',\n      cursor: 'pointer'\n    },\n    gridCard: {\n      //Style for the Grid card\n      '@media (min-width: 1200px)': {\n        //Making the code responsive to different screens\n        'flex-grow': '0',\n        'max-width': '25%',\n        'flex-basis': '25%'\n      },\n      '@media (min-width: 960px) and (max-width:1200px)': {\n        //Making the code responsive to different screens\n        'flex-grow': '0',\n        'max-width': '33%',\n        'flex-basis': '33%'\n      }\n    },\n    card: {\n      //Style for the card and responsive code for different screen size\n      height: \"500px\",\n      '@media (min-width: 1300px)': {\n        //Making the code responsive to different screens\n        height: \"500px\"\n      },\n      '@media (min-width: 960px) and (max-width:1300px)': {\n        //Making the code responsive to different screens\n        height: \"375px\"\n      }\n    },\n    media: {\n      // style for the image in the card\n      height: \"40%\",\n      width: \"100%\" // paddingTop: '56.25%', // 16:9\n\n    },\n    title: {\n      //Style for the Title in the Card\n      \"font-size\": \"25px\",\n      '@media (min-width: 1300px)': {\n        \"font-size\": \"40px\"\n      },\n      '@media (min-width: 960px) and (max-width:1300px)': {\n        \"font-size\": \"30px\"\n      },\n      '@media (max-width: 960px)': {\n        \"font-size\": \"40px\"\n      }\n    },\n    categories: {\n      //Style for the categories in the card\n      \"font-size\": \"16px\",\n      '@media (min-width: 1300px)': {\n        \"font-size\": \"22px\"\n      },\n      '@media (min-width: 960px) and (max-width:1300px)': {\n        \"font-size\": \"20px\"\n      },\n      '@media (max-width: 960px)': {\n        \"font-size\": \"22px\"\n      }\n    },\n    cardContent: {\n      // Styles for the card content\n      \"padding\": \"10px\",\n      \"margin-left\": \"20px\",\n      \"margin-right\": \"20px\",\n      \"height\": \"20%\",\n      \"display\": \"flex\",\n      \"align-items\": \"center\"\n    },\n    cardActionArea: {\n      //Style for the Card action area button\n      \"display\": \"flex\",\n      \"height\": \"100%\",\n      \"flex-direction\": \"column\",\n      \"align-items\": \"normal\",\n      \"justify-content\": \"space-between\"\n    }\n  };\n}; // Creating Home class component to render the home page as per the design\n\n\nvar Home = /*#__PURE__*/function (_Component) {\n  _inherits(Home, _Component);\n\n  var _super = _createSuper(Home);\n\n  function Home() {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this);\n\n    _this.updateSearchRestaurant = function (searchRestaurant, searchOn) {\n      var allRestaurantData = [];\n\n      if (searchOn) {\n        if (!_this.state.isSearchOn) {\n          allRestaurantData = _this.state.restaurant;\n\n          _this.setState({\n            restaurant: searchRestaurant,\n            allRestaurantData: allRestaurantData,\n            isSearchOn: true\n          });\n        } else {\n          _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n            restaurant: searchRestaurant\n          }));\n        }\n      } else {\n        allRestaurantData = _this.state.allRestaurantData;\n\n        _this.setState({\n          restaurant: allRestaurantData,\n          isSearchOn: false\n        });\n      }\n    };\n\n    _this.restaurantCardClicked = function (restaurantId) {\n      _this.props.history.push('/restaurant/' + restaurantId);\n    };\n\n    _this.state = {\n      restaurant: [],\n      isSearchOn: false\n    };\n    return _this;\n  } //This Method is called when the components are mounted.\n  //This method inturn calls the api to get all the restaurants in the data base and then sets the state of the restaurant\n  //Re-renders the page with the updated restaurant details.\n\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var data = null;\n      var xhrRestaurant = new XMLHttpRequest();\n      var that = this;\n      xhrRestaurant.addEventListener(\"readystatechange\", function () {\n        if (xhrRestaurant.readyState === 4 && xhrRestaurant.status === 200) {\n          var restaurant = JSON.parse(xhrRestaurant.responseText);\n          that.setState({\n            restaurant: restaurant.restaurants\n          });\n        }\n      });\n      xhrRestaurant.open(\"GET\", this.props.baseUrl + \"restaurant\"); // Getting all data from the restaurant endpoint.\n\n      xhrRestaurant.send(data);\n    } //This method is called from the header when the search box is activated and the page is needed to be updated with the new restaurant list.\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // Styles are stored in the const classes\n      var classes = this.props.classes;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        baseUrl: this.props.baseUrl,\n        showHeaderSearchBox: true,\n        updateSearchRestaurant: this.updateSearchRestaurant,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        wrap: \"wrap\",\n        alignContent: \"center\",\n        className: classes.grid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }\n      }, this.state.restaurant !== null ? this.state.restaurant.map(function (restaurant) {\n        return (\n          /*#__PURE__*/\n          //Grid Used to create columns as per the screen size\n          //Card used to show the restaurant details.\n          React.createElement(Grid, {\n            key: restaurant.id,\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 3,\n            className: classes.gridCard,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(Card, {\n            className: classes.card,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(CardActionArea, {\n            className: classes.cardActionArea,\n            onClick: function onClick() {\n              return _this2.restaurantCardClicked(restaurant.id);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(CardMedia, {\n            className: classes.media,\n            image: restaurant.photo_URL,\n            title: restaurant.restaurant_name,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }\n          }), /*#__PURE__*/React.createElement(CardContent, {\n            className: classes.cardContent,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(Typography, {\n            className: classes.title,\n            variant: \"h5\",\n            component: \"h2\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 31\n            }\n          }, restaurant.restaurant_name)), /*#__PURE__*/React.createElement(CardContent, {\n            className: classes.cardContent,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(Typography, {\n            variant: \"subtitle1\",\n            component: \"p\",\n            className: classes.categories,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 31\n            }\n          }, restaurant.categories)), /*#__PURE__*/React.createElement(CardContent, {\n            className: classes.cardContent,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"card-bottom-info\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"rest-rating\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 53\n            }\n          }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n            icon: \"star\",\n            size: \"lg\",\n            color: \"white\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 57\n            }\n          })), /*#__PURE__*/React.createElement(Typography, {\n            variant: \"caption\",\n            component: \"p\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 53\n            }\n          }, restaurant.customer_rating), /*#__PURE__*/React.createElement(Typography, {\n            variant: \"caption\",\n            component: \"p\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 53\n            }\n          }, \"(\", restaurant.number_customers_rated, \")\")), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"rest-for-two\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Typography, {\n            variant: \"caption\",\n            component: \"p\",\n            style: {\n              fontSize: '14px'\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 53\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            className: \"fa fa-inr\",\n            \"aria-hidden\": \"true\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 57\n            }\n          }), restaurant.average_price), /*#__PURE__*/React.createElement(Typography, {\n            variant: \"caption\",\n            component: \"p\",\n            style: {\n              fontSize: '14px'\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 53\n            }\n          }, \"for two\")))))))\n        );\n      }) : /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body1\",\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 20\n        }\n      }, \"No restaurant with given name.\"))));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default withStyles(styles)(Home);","map":{"version":3,"sources":["/Users/pradeeph/Documents/Upgrad_FullStackDevelopment/Upgrad_Capstone_FrontEnd/food-ordering-app/src/screens/home/Home.js"],"names":["React","Component","Header","Grid","withStyles","Card","CardActionArea","CardContent","CardMedia","Typography","FontAwesomeIcon","styles","theme","root","flexGrow","backgroundColor","palette","background","paper","grid","transform","cursor","gridCard","card","height","media","width","title","categories","cardContent","cardActionArea","Home","updateSearchRestaurant","searchRestaurant","searchOn","allRestaurantData","state","isSearchOn","restaurant","setState","restaurantCardClicked","restaurantId","props","history","push","data","xhrRestaurant","XMLHttpRequest","that","addEventListener","readyState","status","JSON","parse","responseText","restaurants","open","baseUrl","send","classes","map","id","photo_URL","restaurant_name","customer_rating","number_customers_rated","fontSize","average_price"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Header from '../../common/header/Header';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '@fortawesome/fontawesome-free-solid';\r\nimport '@fortawesome/fontawesome-svg-core';\r\n\r\n\r\nimport './Home.css';\r\n\r\n// Custom Styles to over ride material ui default styles\r\nconst styles = (theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n\r\n  grid: { //style for the grid component\r\n    \"padding\": \"20px\",\r\n    \"margin-left\": \"0.5%\",\r\n    \"margin-right\": \"0.5%\",\r\n    transform: 'translateZ(0)',\r\n    cursor: 'pointer',\r\n  },\r\n  gridCard: { //Style for the Grid card\r\n    '@media (min-width: 1200px)': { //Making the code responsive to different screens\r\n\r\n      'flex-grow': '0',\r\n      'max-width': '25%',\r\n      'flex-basis': '25%',\r\n    },\r\n\r\n    '@media (min-width: 960px) and (max-width:1200px)': { //Making the code responsive to different screens\r\n      'flex-grow': '0',\r\n      'max-width': '33%',\r\n      'flex-basis': '33%',\r\n    },\r\n  },\r\n\r\n  card: { //Style for the card and responsive code for different screen size\r\n    height: \"500px\",\r\n    '@media (min-width: 1300px)': { //Making the code responsive to different screens\r\n      height: \"500px\",\r\n    },\r\n    '@media (min-width: 960px) and (max-width:1300px)': { //Making the code responsive to different screens\r\n      height: \"375px\",\r\n    }\r\n  },\r\n\r\n  media: { // style for the image in the card\r\n    height: \"40%\",\r\n    width: \"100%\",\r\n    // paddingTop: '56.25%', // 16:9\r\n  },\r\n  title: { //Style for the Title in the Card\r\n    \"font-size\": \"25px\",\r\n    '@media (min-width: 1300px)': {\r\n      \"font-size\": \"40px\",\r\n    },\r\n    '@media (min-width: 960px) and (max-width:1300px)': {\r\n      \"font-size\": \"30px\",\r\n    },\r\n    '@media (max-width: 960px)': {\r\n      \"font-size\": \"40px\",\r\n    }\r\n  },\r\n  categories: { //Style for the categories in the card\r\n    \"font-size\": \"16px\",\r\n    '@media (min-width: 1300px)': {\r\n      \"font-size\": \"22px\",\r\n    },\r\n    '@media (min-width: 960px) and (max-width:1300px)': {\r\n      \"font-size\": \"20px\",\r\n    },\r\n    '@media (max-width: 960px)': {\r\n      \"font-size\": \"22px\",\r\n    }\r\n  },\r\n\r\n\r\n  cardContent: { // Styles for the card content\r\n    \"padding\": \"10px\",\r\n    \"margin-left\": \"20px\",\r\n    \"margin-right\": \"20px\",\r\n    \"height\": \"20%\",\r\n    \"display\": \"flex\",\r\n    \"align-items\": \"center\",\r\n  },\r\n  cardActionArea: { //Style for the Card action area button\r\n    \"display\": \"flex\",\r\n    \"height\": \"100%\",\r\n    \"flex-direction\": \"column\",\r\n    \"align-items\": \"normal\",\r\n    \"justify-content\": \"space-between\",\r\n\r\n  }\r\n\r\n}))\r\n\r\n// Creating Home class component to render the home page as per the design\r\nclass Home extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      restaurant: [],\r\n      isSearchOn: false,\r\n    }\r\n  }\r\n\r\n  //This Method is called when the components are mounted.\r\n  //This method inturn calls the api to get all the restaurants in the data base and then sets the state of the restaurant\r\n  //Re-renders the page with the updated restaurant details.\r\n  componentDidMount() {\r\n    let data = null;\r\n    let xhrRestaurant = new XMLHttpRequest();\r\n    let that = this;\r\n    xhrRestaurant.addEventListener(\"readystatechange\", function () {\r\n      if (xhrRestaurant.readyState === 4 && xhrRestaurant.status === 200) {\r\n        let restaurant = JSON.parse(xhrRestaurant.responseText)\r\n        that.setState({\r\n          restaurant: restaurant.restaurants\r\n        });\r\n      }\r\n    })\r\n    xhrRestaurant.open(\"GET\", this.props.baseUrl + \"restaurant\") // Getting all data from the restaurant endpoint.\r\n    xhrRestaurant.send(data)\r\n  }\r\n\r\n\r\n  //This method is called from the header when the search box is activated and the page is needed to be updated with the new restaurant list.\r\n  updateSearchRestaurant = (searchRestaurant, searchOn) => {\r\n    let allRestaurantData = [];\r\n    if (searchOn) {\r\n      if (!this.state.isSearchOn) {\r\n        allRestaurantData = this.state.restaurant;\r\n        this.setState({\r\n          restaurant: searchRestaurant,\r\n          allRestaurantData: allRestaurantData,\r\n          isSearchOn: true,\r\n        })\r\n      } else {\r\n        this.setState({\r\n          ...this.state,\r\n          restaurant: searchRestaurant,\r\n        })\r\n      }\r\n    } else {\r\n      allRestaurantData = this.state.allRestaurantData;\r\n      this.setState({\r\n        restaurant: allRestaurantData,\r\n        isSearchOn: false,\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  //This Method Handles the click on the restaurant card.\r\n  //It takes the restaurant id as the Parameter and then pushes the restaurantDetails page\r\n  restaurantCardClicked = (restaurantId) => {\r\n    this.props.history.push('/restaurant/' + restaurantId);\r\n  }\r\n\r\n  render() {\r\n    // Styles are stored in the const classes\r\n    const { classes } = this.props;\r\n    return (\r\n        <div>\r\n          {/* Rendering the Header Component */}\r\n          <Header baseUrl={this.props.baseUrl} showHeaderSearchBox={true} updateSearchRestaurant={this.updateSearchRestaurant}></Header>\r\n          <div className=\"flex-container\">\r\n            <Grid container spacing={3} wrap=\"wrap\" alignContent=\"center\" className={classes.grid}>\r\n              {/* Restaurant array map method is called and for each item in the array a card is rendered with the details. */}\r\n              {this.state.restaurant !== null ? this.state.restaurant.map(restaurant => (\r\n                      //Grid Used to create columns as per the screen size\r\n                      //Card used to show the restaurant details.\r\n                      <Grid key={restaurant.id} item xs={12} sm={6} md={3} className={classes.gridCard}>\r\n                        <Card className={classes.card}>\r\n                          <CardActionArea className={classes.cardActionArea} onClick={() => this.restaurantCardClicked(restaurant.id)}>\r\n                            <CardMedia\r\n                                className={classes.media}\r\n                                image={restaurant.photo_URL}\r\n                                title={restaurant.restaurant_name}\r\n                            />\r\n                            <CardContent className={classes.cardContent}>\r\n                              <Typography className={classes.title} variant=\"h5\" component=\"h2\">\r\n                                {restaurant.restaurant_name}\r\n                              </Typography>\r\n                            </CardContent>\r\n                            <CardContent className={classes.cardContent}>\r\n                              <Typography variant=\"subtitle1\" component=\"p\" className={classes.categories}>\r\n                                {restaurant.categories}\r\n                              </Typography>\r\n                            </CardContent>\r\n                            <CardContent className={classes.cardContent}>\r\n                              <div className=\"card-bottom-info\">\r\n                                                <span className=\"rest-rating\">\r\n                                                    <span>\r\n                                                        <FontAwesomeIcon icon=\"star\" size=\"lg\" color=\"white\" />\r\n                                                    </span>\r\n                                                    <Typography variant=\"caption\" component=\"p\" >{restaurant.customer_rating}</Typography>\r\n                                                    <Typography variant=\"caption\" component=\"p\" >({restaurant.number_customers_rated})</Typography>\r\n                                                </span>\r\n                                <span className=\"rest-for-two\">\r\n                                                    <Typography variant=\"caption\" component=\"p\" style={{fontSize: '14px'}}>\r\n                                                        <i className=\"fa fa-inr\" aria-hidden=\"true\"></i>\r\n                                                      {restaurant.average_price}\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"caption\" component=\"p\" style={{fontSize: '14px'}}>for two</Typography>\r\n                                                </span>\r\n                              </div>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                        </Card>\r\n                      </Grid>\r\n                  ))\r\n                  :<Typography variant='body1' component='p'>\r\n                    No restaurant with given name.\r\n                  </Typography>\r\n              }\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Home);"]},"metadata":{},"sourceType":"module"}